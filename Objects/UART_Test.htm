<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\UART_Test.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\UART_Test.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Thu May 19 17:49:28 2022
<BR><P>
<H3>Maximum Stack Usage =        340 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; setBoard &rArr; titleCluster1 &rArr; SysCtlClockGet
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[7]">Reset_Handler</a>
 <LI><a href="#[1c]">__user_initial_stackheap</a>
 <LI><a href="#[3]">NmiSR</a>
 <LI><a href="#[4]">FaultISR</a>
 <LI><a href="#[5]">IntDefaultHandler</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[3]">NmiSR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">NmiSR</a><BR>
 <LI><a href="#[4]">FaultISR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">FaultISR</a><BR>
 <LI><a href="#[5]">IntDefaultHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">IntDefaultHandler</a><BR>
 <LI><a href="#[25]">UARTConfigSetExpClk</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[25]">UARTConfigSetExpClk</a><BR>
 <LI><a href="#[1a]">SysCtlDelay</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1a]">SysCtlDelay</a><BR>
 <LI><a href="#[24]">UARTCharPut</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[24]">UARTCharPut</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[4]">FaultISR</a> from startup_rvmdk.o(RESET) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[6]">GPIOPortF_Handler</a> from uart_test.o(i.GPIOPortF_Handler) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[5]">IntDefaultHandler</a> from startup_rvmdk.o(RESET) referenced 113 times from startup_rvmdk.o(RESET)
 <LI><a href="#[3]">NmiSR</a> from startup_rvmdk.o(RESET) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[7]">Reset_Handler</a> from startup_rvmdk.o(RESET) referenced from startup_rvmdk.o(RESET)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[7]"></a>Reset_Handler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[8]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
</UL>

<P><STRONG><a name="[9]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[b]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[8f]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[90]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[c]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[91]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[12]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[d]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[92]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[93]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[94]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[95]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[96]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[97]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[98]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[99]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[9a]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[9b]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[9c]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[9d]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[9e]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[9f]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[a0]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[a1]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[a2]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[a3]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[a4]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[a5]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[17]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[a6]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[a7]"></a>__rt_lib_shutdown_fini_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[a8]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[a9]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000011))

<P><STRONG><a name="[aa]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000012))

<P><STRONG><a name="[ab]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[ac]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[ad]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[a]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[ae]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[f]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[11]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[af]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[13]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 340 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; setBoard &rArr; titleCluster1 &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[b0]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[1d]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[16]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[b1]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[18]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[1a]"></a>SysCtlDelay</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sysctl.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockSet
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;titleClusterP2
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;titleClusterP1
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;titleCluster3
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;titleCluster2
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;titleCluster1
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDefaultBoard
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBoard
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel88On
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel88Off
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel83On
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel83Off
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel828On
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel828Off
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel823On
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel823Off
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel818On
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel818Off
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel813On
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel813Off
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel38On
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel38Off
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel33On
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel33Off
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel328On
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel328Off
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel323On
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel323Off
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel318On
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel318Off
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel313On
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel313Off
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe88On
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe88Off
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe83On
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe83Off
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe828On
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe828Off
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe823On
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe823Off
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe818On
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe818Off
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe813On
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe813Off
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe38On
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe38Off
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe33On
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe33Off
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe338On
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe338Off
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe333On
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe333Off
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe3328On
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe3328Off
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe3323On
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe3323Off
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe3318On
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe3318Off
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe3313On
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe3313Off
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe328On
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe328Off
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe323On
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe323Off
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe318On
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe318Off
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe313On
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe313Off
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe288On
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe288Off
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe283On
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe283Off
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2828On
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2828Off
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2823On
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2823Off
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2818On
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2818Off
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2813On
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2813Off
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe238On
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe238Off
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe233On
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe233Off
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2328On
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2328Off
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2323On
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2323Off
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2318On
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2318Off
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2313On
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2313Off
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;p2TurnDeactive
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;p2TurnActive
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;p1TurnDeactive
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;p1TurnActive
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayWinner
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clearDisplay
</UL>

<P><STRONG><a name="[1c]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[29]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;titleClusterP2
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;titleClusterP1
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;titleCluster3
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;titleCluster2
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;titleCluster1
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDefaultBoard
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel88On
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel83On
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel828On
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel828Off
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel823On
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel823Off
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel818On
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel818Off
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel813On
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel813Off
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel38On
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel33On
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel328On
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel328Off
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel323On
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel323Off
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel318On
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel318Off
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel313On
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel313Off
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe88On
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe83On
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe828On
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe823On
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe818On
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe813On
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe38On
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe33On
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe338On
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe333On
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe3328On
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe3328Off
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe3323On
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe3323Off
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe3318On
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe3318Off
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe3313On
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe3313Off
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe328On
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe323On
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe318On
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe313On
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe288On
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe283On
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2828On
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2828Off
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2823On
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2823Off
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2818On
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2818Off
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2813On
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2813Off
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe238On
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe233On
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2328On
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2328Off
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2323On
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2323Off
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2318On
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2318Off
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2313On
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2313Off
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;p2TurnDeactive
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;p2TurnActive
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;p1TurnDeactive
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;p1TurnActive
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayWinner
</UL>

<P><STRONG><a name="[b2]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[b3]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[b4]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[b5]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[b6]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[b7]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[10]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[15]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[b8]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[1b]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[b9]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[19]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[ba]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[bb]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[1f]"></a>GPIODirModeSet</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, gpio.o(i.GPIODirModeSet))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeUART
</UL>

<P><STRONG><a name="[bc]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[20]"></a>GPIOPadConfigSet</STRONG> (Thumb, 354 bytes, Stack size 36 bytes, gpio.o(i.GPIOPadConfigSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = GPIOPadConfigSet
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeUART
</UL>

<P><STRONG><a name="[2c]"></a>GPIOPinConfigure</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinConfigure))
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1e]"></a>GPIOPinTypeUART</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeUART))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GPIOPinTypeUART &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6]"></a>GPIOPortF_Handler</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, uart_test.o(i.GPIOPortF_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>IntGlobalEnable</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, uart_test.o(i.IntGlobalEnable))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt_Init
</UL>

<P><STRONG><a name="[21]"></a>Interrupt_Init</STRONG> (Thumb, 88 bytes, Stack size 4 bytes, uart_test.o(i.Interrupt_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Interrupt_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntGlobalEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2a]"></a>PortFunctionInit</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, uart_test.o(i.PortFunctionInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PortFunctionInit
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[27]"></a>SysCtlClockGet</STRONG> (Thumb, 304 bytes, Stack size 12 bytes, sysctl.o(i.SysCtlClockGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SysCtlClockGet
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;titleClusterP2
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;titleClusterP1
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;titleCluster3
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;titleCluster2
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;titleCluster1
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDefaultBoard
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBoard
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel88On
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel88Off
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel83On
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel83Off
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel828On
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel828Off
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel823On
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel823Off
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel818On
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel818Off
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel813On
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel813Off
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel38On
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel38Off
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel33On
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel33Off
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel328On
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel328Off
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel323On
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel323Off
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel318On
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel318Off
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel313On
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel313Off
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe88On
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe88Off
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe83On
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe83Off
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe828On
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe828Off
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe823On
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe823Off
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe818On
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe818Off
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe813On
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe813Off
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe38On
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe38Off
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe33On
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe33Off
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe338On
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe338Off
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe333On
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe333Off
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe3328On
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe3328Off
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe3323On
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe3323Off
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe3318On
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe3318Off
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe3313On
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe3313Off
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe328On
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe328Off
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe323On
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe323Off
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe318On
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe318Off
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe313On
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe313Off
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe288On
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe288Off
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe283On
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe283Off
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2828On
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2828Off
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2823On
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2823Off
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2818On
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2818Off
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2813On
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2813Off
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe238On
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe238Off
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe233On
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe233Off
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2328On
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2328Off
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2323On
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2323Off
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2318On
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2318Off
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2313On
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2313Off
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;p2TurnDeactive
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;p2TurnActive
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;p1TurnDeactive
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;p1TurnActive
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayWinner
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clearDisplay
</UL>

<P><STRONG><a name="[23]"></a>SysCtlClockSet</STRONG> (Thumb, 270 bytes, Stack size 8 bytes, sysctl.o(i.SysCtlClockSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysCtlClockSet
</UL>
<BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2b]"></a>SysCtlPeripheralEnable</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, sysctl.o(i.SysCtlPeripheralEnable))
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[24]"></a>UARTCharPut</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, uart.o(i.UARTCharPut))
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;titleClusterP2
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;titleClusterP1
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;titleCluster3
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;titleCluster2
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;titleCluster1
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDefaultBoard
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel88On
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel88Off
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel83On
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel83Off
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel828On
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel828Off
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel823On
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel823Off
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel818On
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel818Off
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel813On
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel813Off
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel38On
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel38Off
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel33On
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel33Off
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel328On
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel328Off
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel323On
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel323Off
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel318On
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel318Off
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel313On
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel313Off
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe88On
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe88Off
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe83On
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe83Off
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe828On
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe828Off
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe823On
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe823Off
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe818On
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe818Off
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe813On
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe813Off
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe38On
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe38Off
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe33On
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe33Off
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe338On
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe338Off
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe333On
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe333Off
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe3328On
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe3328Off
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe3323On
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe3323Off
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe3318On
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe3318Off
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe3313On
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe3313Off
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe328On
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe328Off
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe323On
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe323Off
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe318On
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe318Off
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe313On
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe313Off
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe288On
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe288Off
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe283On
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe283Off
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2828On
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2828Off
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2823On
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2823Off
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2818On
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2818Off
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2813On
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2813Off
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe238On
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe238Off
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe233On
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe233Off
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2328On
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2328Off
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2323On
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2323Off
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2318On
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2318Off
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2313On
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2313Off
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;p2TurnDeactive
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;p2TurnActive
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;p1TurnDeactive
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;p1TurnActive
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayWinner
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clearDisplay
</UL>

<P><STRONG><a name="[25]"></a>UARTConfigSetExpClk</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, uart.o(i.UARTConfigSetExpClk))
<BR><BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTConfigSetExpClk
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTConfigSetExpClk
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[26]"></a>clearDisplay</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, uart_test.o(i.clearDisplay))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = clearDisplay &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBoard
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[28]"></a>displayWinner</STRONG> (Thumb, 416 bytes, Stack size 120 bytes, uart_test.o(i.displayWinner))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = displayWinner &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[34]"></a>getThePixelLocation</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, uart_test.o(i.getThePixelLocation))
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[14]"></a>main</STRONG> (Thumb, 572 bytes, Stack size 0 bytes, uart_test.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = main &rArr; setBoard &rArr; titleCluster1 &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTConfigSetExpClk
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockSet
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeUART
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinConfigure
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;winning_condition
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBoard
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;p2TurnDeactive
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;p2TurnActive
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;p1TurnDeactive
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;p1TurnActive
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getThePixelLocation
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayWinner
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clearDisplay
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PortFunctionInit
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[2e]"></a>p1TurnActive</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, uart_test.o(i.p1TurnActive))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = p1TurnActive &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[31]"></a>p1TurnDeactive</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, uart_test.o(i.p1TurnDeactive))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = p1TurnDeactive &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[32]"></a>p2TurnActive</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, uart_test.o(i.p2TurnActive))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = p2TurnActive &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[33]"></a>p2TurnDeactive</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, uart_test.o(i.p2TurnDeactive))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = p2TurnDeactive &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[35]"></a>pixe2313Off</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, uart_test.o(i.pixe2313Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pixe2313Off &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[36]"></a>pixe2313On</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, uart_test.o(i.pixe2313On))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pixe2313On &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[37]"></a>pixe2318Off</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, uart_test.o(i.pixe2318Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pixe2318Off &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[38]"></a>pixe2318On</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, uart_test.o(i.pixe2318On))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pixe2318On &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[39]"></a>pixe2323Off</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, uart_test.o(i.pixe2323Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pixe2323Off &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[3a]"></a>pixe2323On</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, uart_test.o(i.pixe2323On))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pixe2323On &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[3b]"></a>pixe2328Off</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, uart_test.o(i.pixe2328Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pixe2328Off &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[3c]"></a>pixe2328On</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, uart_test.o(i.pixe2328On))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pixe2328On &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[3d]"></a>pixe233Off</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, uart_test.o(i.pixe233Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = pixe233Off &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[3e]"></a>pixe233On</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, uart_test.o(i.pixe233On))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pixe233On &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[3f]"></a>pixe238Off</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, uart_test.o(i.pixe238Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = pixe238Off &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[40]"></a>pixe238On</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, uart_test.o(i.pixe238On))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pixe238On &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[41]"></a>pixe2813Off</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, uart_test.o(i.pixe2813Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pixe2813Off &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[42]"></a>pixe2813On</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, uart_test.o(i.pixe2813On))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pixe2813On &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[43]"></a>pixe2818Off</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, uart_test.o(i.pixe2818Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pixe2818Off &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[44]"></a>pixe2818On</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, uart_test.o(i.pixe2818On))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pixe2818On &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[45]"></a>pixe2823Off</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, uart_test.o(i.pixe2823Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pixe2823Off &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[46]"></a>pixe2823On</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, uart_test.o(i.pixe2823On))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pixe2823On &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[47]"></a>pixe2828Off</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, uart_test.o(i.pixe2828Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pixe2828Off &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[48]"></a>pixe2828On</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, uart_test.o(i.pixe2828On))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pixe2828On &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[49]"></a>pixe283Off</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, uart_test.o(i.pixe283Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = pixe283Off &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[4a]"></a>pixe283On</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, uart_test.o(i.pixe283On))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pixe283On &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[4b]"></a>pixe288Off</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, uart_test.o(i.pixe288Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = pixe288Off &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[4c]"></a>pixe288On</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, uart_test.o(i.pixe288On))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pixe288On &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[4d]"></a>pixe313Off</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, uart_test.o(i.pixe313Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = pixe313Off &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[4e]"></a>pixe313On</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, uart_test.o(i.pixe313On))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pixe313On &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[4f]"></a>pixe318Off</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, uart_test.o(i.pixe318Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = pixe318Off &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[50]"></a>pixe318On</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, uart_test.o(i.pixe318On))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pixe318On &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[51]"></a>pixe323Off</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, uart_test.o(i.pixe323Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = pixe323Off &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[52]"></a>pixe323On</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, uart_test.o(i.pixe323On))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pixe323On &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[53]"></a>pixe328Off</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, uart_test.o(i.pixe328Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = pixe328Off &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[54]"></a>pixe328On</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, uart_test.o(i.pixe328On))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pixe328On &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[55]"></a>pixe3313Off</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, uart_test.o(i.pixe3313Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pixe3313Off &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[56]"></a>pixe3313On</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, uart_test.o(i.pixe3313On))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pixe3313On &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[57]"></a>pixe3318Off</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, uart_test.o(i.pixe3318Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pixe3318Off &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[58]"></a>pixe3318On</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, uart_test.o(i.pixe3318On))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pixe3318On &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[59]"></a>pixe3323Off</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, uart_test.o(i.pixe3323Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pixe3323Off &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[5a]"></a>pixe3323On</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, uart_test.o(i.pixe3323On))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pixe3323On &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[5b]"></a>pixe3328Off</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, uart_test.o(i.pixe3328Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pixe3328Off &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[5c]"></a>pixe3328On</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, uart_test.o(i.pixe3328On))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pixe3328On &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[5d]"></a>pixe333Off</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, uart_test.o(i.pixe333Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = pixe333Off &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[5e]"></a>pixe333On</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, uart_test.o(i.pixe333On))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pixe333On &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[5f]"></a>pixe338Off</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, uart_test.o(i.pixe338Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = pixe338Off &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[60]"></a>pixe338On</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, uart_test.o(i.pixe338On))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pixe338On &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[61]"></a>pixe33Off</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, uart_test.o(i.pixe33Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = pixe33Off &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[62]"></a>pixe33On</STRONG> (Thumb, 150 bytes, Stack size 40 bytes, uart_test.o(i.pixe33On))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pixe33On &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[63]"></a>pixe38Off</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, uart_test.o(i.pixe38Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = pixe38Off &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[64]"></a>pixe38On</STRONG> (Thumb, 150 bytes, Stack size 40 bytes, uart_test.o(i.pixe38On))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pixe38On &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[65]"></a>pixe813Off</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, uart_test.o(i.pixe813Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = pixe813Off &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[66]"></a>pixe813On</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, uart_test.o(i.pixe813On))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pixe813On &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[67]"></a>pixe818Off</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, uart_test.o(i.pixe818Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = pixe818Off &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[68]"></a>pixe818On</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, uart_test.o(i.pixe818On))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pixe818On &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[69]"></a>pixe823Off</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, uart_test.o(i.pixe823Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = pixe823Off &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[6a]"></a>pixe823On</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, uart_test.o(i.pixe823On))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pixe823On &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[6b]"></a>pixe828Off</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, uart_test.o(i.pixe828Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = pixe828Off &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[6c]"></a>pixe828On</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, uart_test.o(i.pixe828On))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pixe828On &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[6d]"></a>pixe83Off</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, uart_test.o(i.pixe83Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = pixe83Off &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[6e]"></a>pixe83On</STRONG> (Thumb, 150 bytes, Stack size 40 bytes, uart_test.o(i.pixe83On))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pixe83On &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[6f]"></a>pixe88Off</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, uart_test.o(i.pixe88Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = pixe88Off &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[70]"></a>pixe88On</STRONG> (Thumb, 150 bytes, Stack size 40 bytes, uart_test.o(i.pixe88On))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pixe88On &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[71]"></a>pixel313Off</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, uart_test.o(i.pixel313Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pixel313Off &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[72]"></a>pixel313On</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, uart_test.o(i.pixel313On))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pixel313On &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[73]"></a>pixel318Off</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, uart_test.o(i.pixel318Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pixel318Off &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[74]"></a>pixel318On</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, uart_test.o(i.pixel318On))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pixel318On &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[75]"></a>pixel323Off</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, uart_test.o(i.pixel323Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pixel323Off &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[76]"></a>pixel323On</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, uart_test.o(i.pixel323On))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pixel323On &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[77]"></a>pixel328Off</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, uart_test.o(i.pixel328Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pixel328Off &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[78]"></a>pixel328On</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, uart_test.o(i.pixel328On))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pixel328On &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[79]"></a>pixel33Off</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, uart_test.o(i.pixel33Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = pixel33Off &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[7a]"></a>pixel33On</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, uart_test.o(i.pixel33On))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pixel33On &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[7b]"></a>pixel38Off</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, uart_test.o(i.pixel38Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = pixel38Off &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[7c]"></a>pixel38On</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, uart_test.o(i.pixel38On))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pixel38On &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[7d]"></a>pixel813Off</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, uart_test.o(i.pixel813Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pixel813Off &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[7e]"></a>pixel813On</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, uart_test.o(i.pixel813On))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pixel813On &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[7f]"></a>pixel818Off</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, uart_test.o(i.pixel818Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pixel818Off &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[80]"></a>pixel818On</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, uart_test.o(i.pixel818On))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pixel818On &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[81]"></a>pixel823Off</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, uart_test.o(i.pixel823Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pixel823Off &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[82]"></a>pixel823On</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, uart_test.o(i.pixel823On))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pixel823On &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[83]"></a>pixel828Off</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, uart_test.o(i.pixel828Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pixel828Off &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[84]"></a>pixel828On</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, uart_test.o(i.pixel828On))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pixel828On &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[85]"></a>pixel83Off</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, uart_test.o(i.pixel83Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = pixel83Off &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[86]"></a>pixel83On</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, uart_test.o(i.pixel83On))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pixel83On &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[87]"></a>pixel88Off</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, uart_test.o(i.pixel88Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = pixel88Off &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[88]"></a>pixel88On</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, uart_test.o(i.pixel88On))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pixel88On &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchPixel
</UL>

<P><STRONG><a name="[2d]"></a>setBoard</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, uart_test.o(i.setBoard))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = setBoard &rArr; titleCluster1 &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;titleClusterP2
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;titleClusterP1
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;titleCluster3
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;titleCluster2
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;titleCluster1
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDefaultBoard
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clearDisplay
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[89]"></a>setDefaultBoard</STRONG> (Thumb, 538 bytes, Stack size 176 bytes, uart_test.o(i.setDefaultBoard))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = setDefaultBoard &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBoard
</UL>

<P><STRONG><a name="[2f]"></a>switchPixel</STRONG> (Thumb, 1124 bytes, Stack size 16 bytes, uart_test.o(i.switchPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = switchPixel &rArr; pixel88On &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel88On
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel88Off
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel83On
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel83Off
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel828On
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel828Off
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel823On
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel823Off
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel818On
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel818Off
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel813On
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel813Off
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel38On
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel38Off
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel33On
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel33Off
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel328On
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel328Off
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel323On
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel323Off
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel318On
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel318Off
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel313On
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixel313Off
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe88On
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe88Off
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe83On
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe83Off
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe828On
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe828Off
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe823On
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe823Off
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe818On
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe818Off
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe813On
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe813Off
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe38On
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe38Off
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe33On
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe33Off
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe338On
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe338Off
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe333On
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe333Off
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe3328On
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe3328Off
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe3323On
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe3323Off
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe3318On
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe3318Off
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe3313On
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe3313Off
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe328On
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe328Off
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe323On
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe323Off
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe318On
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe318Off
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe313On
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe313Off
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe288On
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe288Off
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe283On
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe283Off
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2828On
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2828Off
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2823On
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2823Off
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2818On
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2818Off
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2813On
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2813Off
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe238On
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe238Off
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe233On
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe233Off
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2328On
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2328Off
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2323On
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2323Off
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2318On
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2318Off
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2313On
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pixe2313Off
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8a]"></a>titleCluster1</STRONG> (Thumb, 1200 bytes, Stack size 320 bytes, uart_test.o(i.titleCluster1))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = titleCluster1 &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBoard
</UL>

<P><STRONG><a name="[8b]"></a>titleCluster2</STRONG> (Thumb, 736 bytes, Stack size 280 bytes, uart_test.o(i.titleCluster2))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = titleCluster2 &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBoard
</UL>

<P><STRONG><a name="[8c]"></a>titleCluster3</STRONG> (Thumb, 274 bytes, Stack size 104 bytes, uart_test.o(i.titleCluster3))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = titleCluster3 &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBoard
</UL>

<P><STRONG><a name="[8d]"></a>titleClusterP1</STRONG> (Thumb, 472 bytes, Stack size 184 bytes, uart_test.o(i.titleClusterP1))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = titleClusterP1 &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBoard
</UL>

<P><STRONG><a name="[8e]"></a>titleClusterP2</STRONG> (Thumb, 472 bytes, Stack size 184 bytes, uart_test.o(i.titleClusterP2))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = titleClusterP2 &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBoard
</UL>

<P><STRONG><a name="[30]"></a>winning_condition</STRONG> (Thumb, 3352 bytes, Stack size 0 bytes, uart_test.o(i.winning_condition))
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e]"></a>_fp_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_fp_1
</UL>

<P><STRONG><a name="[bd]"></a>__fplib_config_fpu_vfp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[be]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[3]"></a>NmiSR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>FaultISR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>IntDefaultHandler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
